install.packages(shiny)
install.packages("shiny")
ls
install.packages("data.frame")
install.packages("data.tables")
library(shiny)
runExample("01_hello")
runExample("01_hello")
ui <-
q
test <- c(1:3)
install.packages("profvis")
library(profvis)
shiny::runApp('code/sialab/covid_vis')
runApp('code/sialab/covid_vis')
profvis({runExample(example = "06_tabsets", display.mode = "normal")})
paste0(ifelse("test", "test", ""), "1")
paste0(ifelse("", "test", ""), "1")
shiny::runApp('code/sialab/covid_vis')
runApp('code/sialab/covid_vis')
runApp('code/sialab/covid_vis')
runApp('code/sialab/covid_vis')
log10(0)
runApp('code/sialab/covid_vis')
counties
#Remove if_else if counties are actually reported correctly
counties$cases <- aggregated[if_else(counties$STATENAME == "New York" & counties$NAME %in% c("Bronx", "New York", "Kings", "Queens", "Richmond"), "New York City, New York", paste0(counties$NAME, ", ", counties$STATENAME)), Positive]
counties <- readOGR("our_data/US/counties.json")
#setwd("/home/ubuntu/covid_vis")
setwd("/home/lofatdairy/code/sialab/covid_vis")
counties <- readOGR("our_data/US/counties.json")
obs <- fread("our_data/test/test.csv")
aggregated <- obs[, .(Tests = length(Positive), Positive = sum(Positive)), by = .(County, State)]
aggregated[, Location := paste0(County, ", ", State)]
setkey(aggregated, Location)
#Remove if_else if counties are actually reported correctly
counties$cases <- aggregated[if_else(counties$STATENAME == "New York" & counties$NAME %in% c("Bronx", "New York", "Kings", "Queens", "Richmond"), "New York City, New York", paste0(counties$NAME, ", ", counties$STATENAME)), Positive]
counties$cases[is.na(counties$cases)] <- 0
counties$cases
counties$cases %>% log10()
log10(counties$cases)[counties$cases != 0]
log10(counties$cases)[counties$cases != 0] %>% pal()
pal <- colorBin(colorRamp(c("#FFDD00","#FF0000")), domain = NULL, bins = 15)
pal <- colorBin(colorRamp(c("#FFDD00","#FF0000")), domain = NULL, bins = 15)
log10(counties$cases)[counties$cases != 0] %>% pal()
pal <- colorBin(colorRamp(c("#FFDD00","#FF0000")), domain = NULL, bins = 10)
pal <- colorBin(colorRamp(c("#FFDD00","#FF0000")), domain = NULL, bins = 10)
log10(counties$cases)[counties$cases != 0] %>% pal()
runApp()
runApp()
pal(ifelse(T, 1, 0))
pal(0)
pal(1)
pal(ifelse(T, c(0, 1), 0))
pal(c(0, 1))
pal(if_else(T, c(0, 1), 0))
pal(if_else(TRUE, c(0, 1), 0))
pal(if_else(C(TRUE, TRUE), c(0, 1), 0))
https://www.egirl.gg/detail/18276
color = ~if_else(log10(cases) == -Inf, "#00FF00", pal(as.numeric(log10(cases))))
cases
color = ~if_else(log10(counties$cases) == -Inf, "#00FF00", pal(as.numeric(log10(counties$cases))))
color
color = if_else(log10(counties$cases) == -Inf, "#00FF00", pal(as.numeric(log10(counties$cases))))
color = if_else(log10(counties$cases) == -Inf, "#00FF00", pal(as.numeric(log10(counties$cases))))
color
pal(NA)
color[color == "#808080"]
cases = counties$cases
if_else(cases == 0)
if_else(cases == 0, T, F)
if_else(cases == 0, "#00FF00", pal(as.numeric(log10(cases))))
pal(as.numeric(log10(cases)))
library(microbenchmark)
