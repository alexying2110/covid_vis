install.packages(shiny)
install.packages("shiny")
ls
install.packages("data.frame")
install.packages("data.tables")
library(shiny)
runExample("01_hello")
runExample("01_hello")
ui <-
q
test <- c(1:3)
install.packages("profvis")
library(profvis)
shiny::runApp('code/sialab/covid_vis')
runApp('code/sialab/covid_vis')
profvis({runExample(example = "06_tabsets", display.mode = "normal")})
source('~/code/sialab/covid_vis/src/gen_test_data.r')
source('~/code/sialab/covid_vis/src/gen_test_data.r')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if_else(aggregated$State == '', as.character(aggregated$County), as.character(aggregated$Location))
obs <- fread("our_data/test/test.csv")
unixTime <- as.numeric(input$time)
aggregated <- obs[Updated < unixTime, .(Tests = length(Positive), Positive = sum(Positive)), by = .(County, State)]
aggregated[, Location := paste0(County, ", ", State)]
setkey(aggregated, Location)
aggregated <- obs[, .(Tests = length(Positive), Positive = sum(Positive)), by = .(County, State)]
aggregated[, Location := paste0(County, ", ", State)]
setkey(aggregated, Location)
aggregated[, Markers := Positive]
aggregated$Lat <- countyCenters[aggregated$Location, Lat]
aggregated$Long <- countyCenters[aggregated$Location, Long]
counties <- readOGR("our_data/US/counties.json")
countyCenters <- fread("our_data/US/county_centers.csv", key = "Location")
counties <- readOGR("our_data/US/counties.json")
countyCenters <- fread("our_data/US/county_centers.csv", key = "Location")
aggregated$Lat <- countyCenters[aggregated$Location, Lat]
aggregated$Long <- countyCenters[aggregated$Location, Long]
leafletProxy("map", data = aggregated) %>%
clearGroup(group = "marker") %>%
addCircleMarkers(
lng = ~Long,
lat = ~Lat,
layerId = ~Location,
radius = ~log10(Markers) * 5,
opacity = .6,
color = ~ifelse(input$markers == "Tests", "#FFDD00", "#FF0000"),
stroke = F,
group = "marker",
label = ~if_else(State == '', as.character(County), as.character(Location))
#popup = ~ifelse(State == '', as.character(County), Location)
)
if_else(State == '', as.character(County), as.character(Location))
if_else(aggregated$State == '', as.character(aggregated$County), as.character(aggregated$Location))
if_else(aggregated$County == '', as.character(aggregated$County), as.character(aggregated$Location))
leafletProxy("map", data = aggregated) %>%
clearGroup(group = "marker") %>%
addCircleMarkers(
lng = ~Long,
lat = ~Lat,
layerId = ~Location,
radius = ~log10(Markers) * 5,
opacity = .6,
color = ~ifelse(input$markers == "Tests", "#FFDD00", "#FF0000"),
stroke = F,
group = "marker",
label = ~if_else(County == '', as.character(State), as.character(Location))
#popup = ~ifelse(State == '', as.character(County), Location)
)
runApp()
runApp()
runApp()
runApp()
runApp()
